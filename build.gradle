buildscript {
	ext {
		springBootVersion = '2.3.4.RELEASE'
	}
	repositories {
		mavenCentral()
		maven { url "https://plugins.gradle.org/m2/" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath "io.spring.gradle:dependency-management-plugin:1.0.9.RELEASE"
		classpath "gradle.plugin.com.ewerk.gradle.plugins:querydsl-plugin:1.0.10"
	}
}

subprojects {
	group = 'com.javabom'

	apply plugin: 'java'
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'

	sourceCompatibility = '1.8'

	repositories {
		mavenCentral()
	}

	dependencies {
		runtime('com.h2database:h2:1.4.199')

		implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
		implementation 'org.springframework.boot:spring-boot-starter-web'
		compileOnly 'org.projectlombok:lombok'
		annotationProcessor 'org.projectlombok:lombok'
		testImplementation('org.springframework.boot:spring-boot-starter-test') {
			exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
		}
	}

	test {
		useJUnitPlatform()
	}

	configurations {
		compileOnly {
			extendsFrom annotationProcessor
		}
	}

}

def queryDslProjects = [project(':fetch-limit'),
						project(':querydsl-projection'),
						project(':covering-index'),
						project(':fix-page'),
						project(':no-offset')]
configure(queryDslProjects) {
	apply plugin: "com.ewerk.gradle.plugins.querydsl"

	dependencies {
		implementation 'com.querydsl:querydsl-jpa'
	}

	def querydslDir = "$buildDir/generated/querydsl"

	querydsl {
		jpa = true
		querydslSourcesDir = querydslDir
	}
	sourceSets {
		main.java.srcDir querydslDir
	}
	configurations {
		querydsl.extendsFrom compileClasspath
	}
	compileQuerydsl {
		options.annotationProcessorPath = configurations.querydsl
	}

}

